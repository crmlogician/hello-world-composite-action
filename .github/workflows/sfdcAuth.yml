name: Creating to Reuse Workflow
# ---------------------------------- 
# Quick Start Prerequisites
# https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/quickstart_prereq.htm
# Connected App: https://developer.salesforce.com/docs/atlas.en-us.api_iot.meta/api_iot/qs_auth_connected_app.htm
# ----------------------------------
on:
  workflow_call:
    inputs:
      user_name:
        required: true
        type: string
      login_url:
        type: string
        default: https://login.salesforce.com
    secrets:
      password:
        required: true
        description: combination of <password>:<security_token>
      sfdc_client_id:
        required: true
        description: Consumer Key of a connected App created within salesforce
      sfdc_client_secret:
        required: true
        description: Consumer Secret of a connected App created within salesforce
    # Mapping the workflow outputs with job outputs
    outputs:
      access_token:
        description: "The first output string"
        value: ${{ jobs.sfdc_auth.outputs.access_token }}
      instance_url:
        description: "The second output string"
        value: ${{ jobs.sfdc_auth.outputs.instance_url }}
      id:
        description: "The first output string"
        value: ${{ jobs.sfdc_auth.outputs.id }}
      error:
        description: "The second output string"
        value: ${{ jobs.sfdc_auth.outputs.error }}
      error_description:
        description: "The second output string"
        value: ${{ jobs.sfdc_auth.outputs.error_description }}
jobs:
  sfdc_auth:
    name: SFDC Authentication
    runs-on: ubuntu-latest
    # Mapping the job outputs to step outputs
    outputs:
      access_token: ${{ steps.sfdc_rest_call.outputs.access_token }}
      instance_url: ${{ steps.sfdc_rest_call.outputs.instance_url }}
      id: ${{ steps.sfdc_rest_call.outputs.id }}
      error: ${{ steps.sfdc_rest_call.outputs.error }}
      error_description: ${{ steps.sfdc_rest_call.outputs.error_description }}
    steps:
      - id: sfdc_rest_call
        name: Authenticating User using Rest call
        run: |
          sfdc_auth_url=$(echo "${{ inputs.login_url}}/services/oauth2/token?grant_type=password&username=${{ inputs.user_name }}&password=${{ secrets.password }}&client_id=${{ secrets.sfdc_client_id }}&client_secret=${{ secrets.sfdc_client_secret }}")
          echo $sfdc_auth_url
          echo "${{ inputs.login_url}}/services/oauth2/token?grant_type=password&username=${{ inputs.user_name }}&password=${{ secrets.password }}&client_id=${{ secrets.sfdc_client_id }}&client_secret=${{ secrets.sfdc_client_secret }}"
          echo "here is user name ${{ inputs.user_name}}"
          echo "here is user name ${{ inputs.login_url}}"
          response=$(curl --request POST --url "$sfdc_auth_url" --header 'accept: application/json' --header 'content-type: application/json'); 
          # debugging callout response
          echo $response;
          
          # ---------------------------------- 
          # Extracing data from response
          # ----------------------------------
          
          # accesss_token
          access_token=$(echo $response | jq -r '.access_token');
          
          # org instance url
          instance_url=$(echo $response | jq -r '.instance_url');
          
          # salesforce domain/id/<org_id>/<user_id>
          id=$(echo $response | jq -r '.id');
          
          # in case getting error into authentication
          error=$(echo $response | jq -r '.error');
          
          # error_description related to error getting into authentication
          error_description=$(echo $response | jq -r '.error_description');
          
          # Validating access_token if null then terminating process
          if [[ -z $access_token ]] || [[ $access_token == "null" ]];
          then 
            echo "----------------------------------"
            echo "Error in salesforce authentication"
            echo "----------------------------------"
            echo "$error  $error_description"
            echo ""
            exit 1;
          fi
          
          # setting up outputs
          echo ::set-output name=access_token::${access_token}
          echo ::set-output name=instance_url::${instance_url}
          echo ::set-output name=id::${id}
          echo ::set-output name=error::${error}
          echo ::set-output name=error_description::${error_description}
